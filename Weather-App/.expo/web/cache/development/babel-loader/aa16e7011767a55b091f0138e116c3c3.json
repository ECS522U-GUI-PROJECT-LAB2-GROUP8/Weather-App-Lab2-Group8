{"ast":null,"code":"import React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { StatusBar } from 'expo-status-bar';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport Navigator from \"./routes/homeStack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsx(Navigator, {});\n}","map":{"version":3,"sources":["C:/GitMainFolder/personal/University Work/Year 2/Semester B/GUI/Weather-App-Lab2-Group8/Weather-App/App.js"],"names":["React","useState","StatusBar","Font","AppLoading","Navigator","App"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAGA,OAAOC,SAAP;;AAUA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,KAAC,SAAD,KADF;AAoBD","sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar'; // Find use for this\r\n\r\nimport * as Font from 'expo-font'; // Import customised fonts\r\nimport { AppLoading } from 'expo'; // With importing fonts\r\n\r\n//import Home from './screens/home';\r\nimport Navigator from './routes/homeStack';\r\n\r\n// Need to get files first before doing this\r\n/**\r\nconst getFonts = () => Font.loadAsync ({\r\n 'nunito-regular': require('./assets/fonts/Nunito-Regular.ttf'),\r\n 'nunito-bold': require('./assets/fonts/Nunito-Bold.ttf')\r\n});\r\n*/\r\n\r\nexport default function App() {\r\n  return(\r\n    <Navigator/>\r\n  );\r\n    //<View style={styles.container}>\r\n    //  <Text>Open up App.js to start working on your app!</Text>\r\n    //  <StatusBar style=\"auto\" />\r\n    //</View>\r\n    /*\r\n    const [fontsLoaded, setFontsLoaded] = useState(false);\r\n      if(fontsLoaded){\r\n        return (\r\n          <Navigator /\r\n        );\r\n       } else {\r\n        return (\r\n          <AppLoading\r\n            startAsync={getFonts}\r\n            onFinish={() => setFontsLoaded (true)}\r\n    */\r\n  \r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}